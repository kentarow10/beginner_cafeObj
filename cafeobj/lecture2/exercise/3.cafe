
mod! MSORT {
    pr(NATLIST)
    op msort : NatList -> NatList .
    op merge : NatList NatList -> NatList .
    op split : NatList NatList NatList -> NatList .
    vars X Y : Nat .
    vars L LL RL : NatList .
    eq msort(nil) = nil .
    eq msort(X | nil) = X | nil .
    eq msort(X | Y | L) = split(X | Y | L,nil,nil) .
    eq split(nil,LL,RL) = merge(msort(LL),msort(RL)) .
    eq split(X | nil,LL,RL) = split(nil,X | LL,RL) .
    eq split(X | Y | L,LL,RL) = split(L,X | LL,Y | RL) .
    eq merge(nil, RL) = RL .
    eq merge(LL, nil) = LL .
    eq merge(X | LL, Y | RL) = if X < Y then {X | merge(LL, Y | RL)} else {Y | merge(X | LL, RL)} .
}

open MSORT .
red msort(4 | 7 | 5 | 1 | 0 | 3 | 6 | 2 | nil) .
close
